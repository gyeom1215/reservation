실행 방법:
1.Gson 라이브러리를 프로젝트에 추가합니다 (Maven 또는 jar 파일).
2.MainApp.java를 컴파일하고 실행합니다.
3.프로그램 시작 시 학생 ID를 입력하라는 대화상자가 나타납니다. ID를 입력하면 해당 학생 ID로 예약 및 조회가 가능합니다. ID 입력 없이 취소하면 학생 ID 입력 필드가 활성화된 창이 뜹니다.
4.예약 정보는 프로젝트 루트 디렉터리에 reservations.json 파일로 저장됩니다.

기능 설명:
F-01 (사용자 역할 기반 기능 제공 - 학생):
학생은 자신의 예약을 생성하고 취소할 수 있습니다.
학생 ID를 입력하여 자신의 예약만 필터링해서 볼 수 있습니다.
F-02 (예약 가능 시간 제공):
ReservationService.AVAILABLE_TIMES에 정의된 고정된 시간대를 콤보박스에서 선택할 수 있습니다.
isTimeSlotAvailable 메소드를 통해 특정 강의실, 날짜, 시간에 예약이 가능한지 확인합니다.
F-03 (자동 승인 조건):
학생이 예약을 시도할 때, 해당 시간대에 다른 예약이 없으면 즉시 예약이 확정(승인)됩니다. (별도 승인 절차 없음)
시간이 겹치는지 여부는 isTimeSlotAvailable에서 체크합니다.
F-04 (예약 정보 시각화):
JTable을 사용하여 예약 목록을 표시합니다.
'모든 예약 보기'와 '내 예약 보기' 버튼으로 표시 내용을 전환할 수 있습니다.
F-05 (예약 현황 관리):
학생은 "예약하기" 버튼으로 새 예약을 만들 수 있습니다.
학생은 테이블에서 자신의 예약을 선택하고 "선택한 내 예약 취소" 버튼으로 예약을 취소할 수 있습니다. (본인 예약만)
F-06 (예약 이력 기록):
모든 예약 정보는 reservations.json 파일에 JSON 형식으로 저장되어 영구적으로 보관됩니다. 프로그램 시작 시 로드되고, 예약 변경 시 저장됩니다.